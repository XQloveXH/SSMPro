<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zxq.mapper.EmployeeMapper">
  <resultMap id="BaseResultMap" type="com.zxq.domain.Employee">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="inputtime" jdbcType="TIMESTAMP" property="inputtime" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="state" jdbcType="BIT" property="state" />
    <result column="admin" jdbcType="BIT" property="admin" />
    <association property="department" javaType="com.zxq.domain.Department"  columnPrefix="d_">
      <result column="id"  property="id"/>
      <result column="name"  property="name"/>
    </association>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from employee
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.zxq.domain.Employee" useGeneratedKeys="true"
  keyProperty="id" keyColumn="id">
    insert into employee (id, username,password, inputtime,
      tel, email, state, admin, 
      dep_id)
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR},#{password}, #{inputtime,jdbcType=TIMESTAMP},
      #{tel,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{state,jdbcType=BIT}, #{admin,jdbcType=BIT}, 
      #{department.id,jdbcType=BIGINT})
  </insert>
  <insert id="saveRoles">
    insert into e_r(eid,rid) values (#{eid},#{rid})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.zxq.domain.Employee">
    update employee
    set username = #{username,jdbcType=VARCHAR},
      inputtime = #{inputtime,jdbcType=TIMESTAMP},
      tel = #{tel,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      state = #{state,jdbcType=BIT},
      admin = #{admin,jdbcType=BIT},
      dep_id = #{department.id,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
<!--  离职状态更新-->
  <update id="updateState">
    update employee set state=false where id=#{id}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, username, inputtime, tel, email, state, admin, dep_id
    from employee
    where id = #{id,jdbcType=BIGINT}
  </select>
  <sql id="where_key">
    <where>
      <if test="_parameter !=null and _parameter !=''">
        and username like concat('%',#{keyword},'%')
        or tel like concat('%',#{keyword},'%')
        or admin like concat('%',#{keyword},'%')
      </if>
    </where>
  </sql>
  <select id="selectAll" resultMap="BaseResultMap" parameterType="String" >
      select e.id, username, inputtime, tel, email, state, admin,
  d.id as d_id,
  d.`name`as d_name
  from employee as e
  LEFT JOIN department as d
  on e.dep_id=d.id
  <include refid="where_key"/>
  </select>
</mapper>